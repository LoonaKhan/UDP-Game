go server:
    terrain generation
        finetune a little more
            better biome calcs
            mushroom fields
            tundra
            desert
        not based on range, but on properties of the number?
            minecraft?
    post_chunk_updates ignores the player who sent data
        only modify a block
    prevents players from moving faster than legally possible
    security/optimizations
        tick system(TPS)?
        header is reduced to bytes (less overhead)
            method: byte (methods can just be numbered?)
            success: bool
            id: byte/short
            timestamp: short?
                server time?
        ignores ddosing stuffs
    test with many clients
    

cpp client:
    player and movement
        all chunks and objects onscreen are drawn based off an offset. that offset is the player pos
    show other players 
    players store snapshots from the server.
        fill up the snapshots a bit
        always be a few seconds late
    cmake: net lib is built upon building any executable
    seperate home/game screens?
        if logged_in, show game screen, else home

note:
    on the client side, the player continuously moves and does stuff, meanwhile, it updates the server on another thread and corrects the player if its position is inaccurate
    chunks are a map that are edited on another thread. rendering thread just draws em

post, get chunks and post_chunk_updates(both ways) are all sent in binary.
    client recieving simply appends to existing chunk data

    server verifies if the address is in Addys
    and then checks player position.
        chunk in render dist?
            yes: update sql
            no: ignore 

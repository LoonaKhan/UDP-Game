go server:
    post_chunk_updates ignores the player who sent data
    prevents players from moving faster than legally possible
    security/optimizations
        tick system(TPS)?
        ignores ddosing stuffs


cpp client:
    test client
        implement each call using macros
        parser
        requests every tick instead of frame
        net/
            core
            macros
            parser
    printing library?
    routes and communications with the server
    perlin noise testing
    multithreading review
        comm with server
        render
        generation?
    terrain
        biomes:
            mushroom fields, plains, desert, tundra
        height:
            valley, flat, mountains
    mesh system?

note:
    on the client side, the player continuously moves and does stuff, meanwhile, it updates the server on another thread and corrects the player if its position is inaccurate
    chunks are a map that are edited on another thread. rendering thread just draws em
